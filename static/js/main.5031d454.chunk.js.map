{"version":3,"sources":["services/userAPI.js","pages/Loading.js","images/logo-menu.png","components/Header.js","services/musicsAPI.js","services/favoriteSongsAPI.js","components/MusicCard.js","pages/Album.js","images/fundo-login.png","pages/Login.js","services/searchAlbumsAPI.js","pages/Search.js","pages/Favorites.js","pages/Profile.js","pages/ProfileEdit.js","pages/NotFound.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Loading","React","Component","Header","state","loading","a","this","setState","requestResult","className","src","menuLogo","alt","to","getMusics","id","fetch","request","json","requestJson","results","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","onCheckboxChange","bind","addToFavorites","removeToFavorites","isFavorite","props","favoritesSongs","music","boolThisSongIsFavorite","some","event","prevState","target","checked","getFavSongs","isFavPage","currentTarget","parentNode","trackName","previewUrl","controls","kind","htmlFor","type","onChange","defaultProps","Album","listarMusicas","album","match","params","respAlbum","respFavorites","arrMusics","shift","map","index","length","artistName","collectionName","Login","nameInput","disabledButton","messageLoginResult","onInputChange","onclickEntrar","loginLogo","placeholder","value","onClick","disabled","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionId","collectionPrice","artworkUrl100","releaseDate","trackCount","Search","onClickButton","showAlbums","buscaArtista","arrAlbuns","resultRequest","Favorites","respFavSongs","Profile","userState","ProfileEdit","checkInputs","validarEmail","onClickSalvar","mountStateUser","emailInput","imgInput","descInput","enabledButton","nameElement","valueElement","activateButton","history","replace","test","nameIsValid","emailIsValid","imgIsValid","descIsValid","NotFound","App","basename","process","exact","path","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5031d454.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <div>\n        Carregando...\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","export default __webpack_public_path__ + \"static/media/logo-menu.4b570550.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Loading from '../pages/Loading';\nimport { getUser } from '../services/userAPI';\nimport '../style/Header.css';\nimport menuLogo from '../images/logo-menu.png';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      user: '',\n      loading: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.setState(\n      { loading: true },\n      async () => {\n        const requestResult = await getUser();\n        this.setState({\n          loading: false,\n          user: requestResult,\n        });\n      },\n    );\n  }\n\n  render() {\n    const { loading, user } = this.state;\n\n    return (\n      <header data-testid=\"header-component\">\n        {\n          loading\n            ? (\n              <Loading />\n            )\n            : (\n              <div>\n                <div className=\"menu-nivel-1\">\n                  <img className=\"menu-logo\" src={ menuLogo } alt=\"img-menu\" />\n                  <p className=\"nome-usu\" data-testid=\"header-user-name\">{ user.name }</p>\n                </div>\n                <div className=\"menu-nivel-2\">\n                  <NavLink\n                    data-testid=\"link-to-search\"\n                    to=\"/search\"\n                  >\n                    Pesquisa\n                  </NavLink>\n                  <NavLink\n                    data-testid=\"link-to-favorites\"\n                    to=\"/favorites\"\n                  >\n                    Favoritas\n                  </NavLink>\n                  <NavLink\n                    data-testid=\"link-to-profile\"\n                    to=\"/profile\"\n                  >\n                    Perfil\n                  </NavLink>\n                </div>\n              </div>\n            )\n        }\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport '../style/MusicCard.css';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/Loading';\n// import { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n\n    this.onCheckboxChange = this.onCheckboxChange.bind(this);\n    this.addToFavorites = this.addToFavorites.bind(this);\n    this.removeToFavorites = this.removeToFavorites.bind(this);\n\n    this.state = {\n      isFavorite: false,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    const { favoritesSongs, music } = this.props;\n\n    const boolThisSongIsFavorite = favoritesSongs.some((song) => (\n      JSON.stringify(song) === JSON.stringify(music)));\n\n    this.setState({\n      isFavorite: boolThisSongIsFavorite,\n    });\n  }\n\n  onCheckboxChange(event) {\n    // const strNameMusic = event.currentTarget.parentNode.parentNode.firstElementChild.innerText;\n    // const selectedMusic = this.state.album.find((music) => music.trackName === strNameMusic);\n\n    const { music } = this.props;\n\n    this.setState((prevState) => ({\n      isFavorite: !prevState.isFavorite,\n    }));\n\n    if (event.target.checked) {\n      this.addToFavorites(music);\n    } else {\n      this.removeToFavorites(music, event);\n    }\n  }\n\n  removeToFavorites(music, event) {\n    const { getFavSongs } = this.props;\n    const isFavPage = event.currentTarget.parentNode\n      .parentNode.parentNode.className === 'pageFav';\n\n    this.setState(\n      { loading: true },\n      async () => {\n        await removeSong(music);\n        if (isFavPage) {\n          await getFavSongs();\n        }\n        this.setState({\n          loading: false,\n        });\n      },\n    );\n  }\n\n  addToFavorites(music) {\n    this.setState(\n      { loading: true },\n      async () => {\n        await addSong(music);\n        this.setState({\n          // favoritesSongs: [...prevState.favoritesSongs, music],\n          loading: false,\n        });\n      },\n    );\n  }\n\n  render() {\n    const { trackName, previewUrl, trackId } = this.props;\n    const { loading, isFavorite } = this.state;\n\n    return (\n      !loading\n        ? (\n          <div className=\"card\">\n            MusicCard\n            <p>{ trackName }</p>\n            <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n              <track kind=\"captions\" />\n              O seu navegador não suporta o elemento\n              <code>audio</code>\n            </audio>\n            <label htmlFor=\"checkFavorita\">\n              Favorita: &nbsp;\n              <input\n                name=\"checkFavorita\"\n                data-testid={ `checkbox-music-${trackId}` }\n                type=\"checkbox\"\n                checked={ isFavorite }\n                onChange={ this.onCheckboxChange }\n              />\n            </label>\n          </div>)\n        : <Loading />\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string,\n  previewUrl: PropTypes.string,\n  trackId: PropTypes.string,\n  music: PropTypes.string,\n  favoritesSongs: PropTypes.string,\n  getFavSongs: PropTypes.func,\n};\n\nMusicCard.defaultProps = {\n  trackName: '',\n  previewUrl: '',\n  trackId: '',\n  music: '',\n  favoritesSongs: '',\n  getFavSongs: () => {},\n};\n\nexport default MusicCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.listarMusicas = this.listarMusicas.bind(this);\n\n    this.state = {\n      album: [],\n      loading: false,\n      favoritesSongs: [],\n    };\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { id } = match.params;\n\n    this.setState(\n      { loading: true },\n      async () => {\n        const respAlbum = await getMusics(id);\n        const respFavorites = await getFavoriteSongs();\n        this.setState({\n          loading: false,\n          album: respAlbum,\n          favoritesSongs: respFavorites,\n        });\n      },\n    );\n\n    // const resp = await getMusics(id);\n\n    // this.setState({\n    //   album: resp,\n    // });\n  }\n\n  listarMusicas() {\n    const { album, loading, favoritesSongs } = this.state; // todo o arr de albuns da api simulada; A primeira posição são informções do album e não uma música...\n    const arrMusics = [...album];// ...por isso fiz uma cópia do album\n    arrMusics.shift(); // ... e tirei a 1ª posição (q são as infos do album e nao uma musica)\n\n    return (\n      !loading\n        ? (\n          <div>\n            {\n              arrMusics.map((music, index) => (\n                <MusicCard\n                  key={ index }\n                  trackName={ music.trackName }\n                  previewUrl={ music.previewUrl }\n                  trackId={ music.trackId }\n                  // onCheckboxChange={ this.onCheckboxChange }\n                  music={ music }\n                  favoritesSongs={ favoritesSongs }\n                />\n              ))\n            }\n          </div>)\n        : <Loading />\n    );\n  }\n\n  render() {\n    const { album } = this.state;\n\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        {\n          album.length > 0\n            ? (\n              <div>\n                <h4 data-testid=\"artist-name\">{ album[0].artistName }</h4>\n                <p data-testid=\"album-name\">{ album[0].collectionName }</p>\n                { this.listarMusicas() }\n              </div>)\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.func,\n};\n\nAlbum.defaultProps = {\n  match: () => {},\n};\n\nexport default Album;\n","export default __webpack_public_path__ + \"static/media/fundo-login.bd2148ef.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport Loading from './Loading';\nimport '../style/Login.css';\nimport loginLogo from '../images/fundo-login.png';\n\nclass Login extends React.Component {\n  render() {\n    const {\n      nameInput, disabledButton, loading,\n      messageLoginResult, onInputChange, onclickEntrar,\n    } = this.props;\n\n    /* Se 'messageLoginResult' for vazio, significa que a promise lá no App.js ainda não foi concluída.\n    Por isso ainda é necessário permanecer na tela de login. Se for diferente de vazio, já concluí a promise e devo\n    redirecionar para a rota '/search' */\n\n    /* Dentro da condição 'messageLoginResult vazio', tenho duas situações:\n    -primeiro é o inicial. Não há loading e a tela mostra o form\n    -segunda é: aṕos clicar no botão de entrar, a request está em execução no App.js e setei loading como true. Enquanto\n    loading for true não mostro a tela de login e sim o componente Loading, que vai mostrar um 'carregando' na tela */\n    return (\n      messageLoginResult === ''\n        ? (\n          <div data-testid=\"page-login\" className=\"login\">\n            {\n              !loading\n                ? (\n                  <div className=\"main-login\">\n                    <img className=\"login-logo\" src={ loginLogo } alt=\"login\" />\n                    <form className=\"form-login\">\n                      <label htmlFor=\"nameInput\" className=\"labelName\">\n                        <input\n                          placeholder=\"Nome\"\n                          className=\"nameInput\"\n                          name=\"nameInput\"\n                          data-testid=\"login-name-input\"\n                          type=\"text\"\n                          value={ nameInput }\n                          onChange={ onInputChange }\n                        />\n                        <br />\n                      </label>\n                      <button\n                        className=\"loginButton\"\n                        data-testid=\"login-submit-button\"\n                        type=\"button\"\n                        onClick={ onclickEntrar }\n                        disabled={ disabledButton }\n                      >\n                        Entrar\n                      </button>\n                    </form>\n                  </div>)\n                : <Loading />\n            }\n          </div>)\n        : <Redirect to=\"/search\" />\n\n    );\n  }\n}\n\nLogin.propTypes = {\n  nameInput: PropTypes.string,\n  disabledButton: PropTypes.bool,\n  loading: PropTypes.bool,\n  onInputChange: PropTypes.func,\n  onclickEntrar: PropTypes.func,\n  messageLoginResult: PropTypes.string,\n};\n\nLogin.defaultProps = {\n  nameInput: '',\n  disabledButton: true,\n  loading: false,\n  onInputChange: () => {},\n  onclickEntrar: () => {},\n  messageLoginResult: '',\n};\n\nexport default Login;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Loading from './Loading';\nimport '../style/Search.css';\n\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onClickButton = this.onClickButton.bind(this);\n    this.showAlbums = this.showAlbums.bind(this);\n\n    this.state = {\n      buscaArtista: '',\n      disabledButton: true,\n      loading: false,\n      arrAlbuns: [],\n    };\n  }\n\n  // clicar no botão de pesquisar artista\n  async onClickButton() {\n    const { buscaArtista } = this.state;\n\n    this.setState(\n      { loading: true },\n      async () => {\n        const resultRequest = await searchAlbumsAPI(buscaArtista);\n        this.setState({\n          loading: false,\n          arrAlbuns: resultRequest,\n        });\n      },\n    );\n    // const resultRequest = await searchAlbumsAPI(this.state.buscaArtista);\n    // console.log(resultRequest);\n  }\n\n  // A cada nova letra digitada no input de busca de artista...\n  onInputChange(event) {\n    if (event.target.value.length >= 2) {\n      this.setState({\n        buscaArtista: event.target.value,\n        disabledButton: false,\n      });\n    } else {\n      this.setState({\n        buscaArtista: event.target.value,\n        disabledButton: true,\n      });\n    }\n  }\n\n  showAlbums() {\n    const { arrAlbuns, buscaArtista } = this.state;\n    return (\n      <div>\n        Resultado de álbuns de: &nbsp;\n        { buscaArtista }\n        <div>\n          {\n            arrAlbuns.map((album, index) => (\n              <p key={ index }>\n                <Link\n                  data-testid={ `link-to-album-${album.collectionId}` }\n                  to={ `/album/${album.collectionId}` }\n                >\n                  { album.collectionName }\n                </Link>\n              </p>))\n          }\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { disabledButton, loading, arrAlbuns } = this.state;\n\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        {\n          !loading\n            ? (\n              <div className=\"pag-pesquisa\">\n                <div className=\"area-form-pesquisa\">\n                  <form className=\"form-pesquisa\">\n                    <label htmlFor=\"buscaArtista\" className=\"label-input-pesquisa\">\n                      <input\n                        className=\"input-pesquisa\"\n                        name=\"buscaArtista\"\n                        data-testid=\"search-artist-input\"\n                        type=\"text\"\n                        placeholder=\"Nome do artista\"\n                        onChange={ this.onInputChange }\n                      />\n                    </label>\n                      &nbsp;\n                    <button\n                      className=\"button-pesquisa\"\n                      data-testid=\"search-artist-button\"\n                      type=\"button\"\n                      onClick={ this.onClickButton }\n                      disabled={ disabledButton }\n                    >\n                      Pesquisar\n                    </button>\n                  </form>\n                </div>\n                {\n                  arrAlbuns.length > 0\n                    ? this.showAlbums()\n                    : (<p>Nenhum álbum foi encontrado</p>)\n                }\n              </div>)\n            : <Loading />\n        }\n      </div>\n    );\n  }\n}\n\nexport default Search;\n\n/*\n<hr/>\n<p>{ album.artistId }</p>\n<p>{ album.artistName }</p>\n<p>{ album.collectionId }</p>\n<p>{ album.collectionName }</p>\n<p>{ album.collectionPrice }</p>\n<p>{ album.artworkUrl100 }</p>\n<p>{ album.releaseDate }</p>\n<p>{ album.trackCount }</p>\n<hr/>\n*/\n","import React from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n\n    this.getFavSongs = this.getFavSongs.bind(this);\n\n    this.state = {\n      loading: false,\n      favoritesSongs: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getFavSongs();\n  }\n\n  async getFavSongs() {\n    this.setState(\n      { loading: true },\n      async () => {\n        const respFavSongs = await getFavoriteSongs();\n        this.setState({\n          loading: false,\n          favoritesSongs: respFavSongs,\n        });\n      },\n    );\n  }\n\n  render() {\n    const { favoritesSongs, loading } = this.state;\n\n    return (\n      <div data-testid=\"page-favorites\" className=\"pageFav\">\n        <Header />\n        {\n          !loading\n            ? (\n              favoritesSongs.map((music, index) => (\n                <MusicCard\n                  key={ index }\n                  trackName={ music.trackName }\n                  previewUrl={ music.previewUrl }\n                  trackId={ music.trackId }\n                  music={ music }\n                  favoritesSongs={ favoritesSongs }\n                  getFavSongs={ this.getFavSongs }\n                />\n              ))\n            )\n            : <Loading />\n        }\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n\n    this.getUser = this.getUser.bind(this);\n\n    this.state = {\n      loading: true,\n      userState: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  async getUser() {\n    this.setState(\n      { loading: true },\n      async () => {\n        const user = await getUser();\n        this.setState({\n          userState: user,\n          loading: false,\n        });\n      },\n    );\n  }\n\n  render() {\n    const { loading, userState } = this.state;\n\n    return (\n      <div data-testid=\"page-profile\">\n        <Header />\n        {\n          !loading\n            ? (\n              <div>\n                <img\n                  data-testid=\"profile-image\"\n                  src={ userState.image }\n                  alt={ userState.name }\n                />\n                <h1>{ userState.name }</h1>\n                <h1>{ userState.email }</h1>\n                <h1>{ userState.description }</h1>\n                <Link to=\"/profile/edit\">Editar perfil</Link>\n              </div>\n            )\n            : <Loading />\n        }\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import propTypes from 'prop-types';\nimport React from 'react';\nimport Header from '../components/Header';\nimport { getUser, updateUser } from '../services/userAPI';\nimport Loading from './Loading';\nimport '../style/ProfileEdit.css';\n\nclass ProfileEdit extends React.Component {\n  constructor() {\n    super();\n\n    this.getUser = this.getUser.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.checkInputs = this.checkInputs.bind(this);\n    this.validarEmail = this.validarEmail.bind(this);\n    this.onClickSalvar = this.onClickSalvar.bind(this);\n    this.mountStateUser = this.mountStateUser.bind(this);\n\n    this.state = {\n      loading: false,\n      nameInput: '',\n      emailInput: '',\n      imgInput: '',\n      descInput: '',\n      enabledButton: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  onInputChange(event) {\n    const nameElement = event.target.name;\n    const valueElement = event.target.value;\n\n    this.setState(\n      { [nameElement]: valueElement },\n      async () => {\n        const activateButton = this.checkInputs();\n        this.setState({\n          enabledButton: activateButton,\n        });\n      },\n    );\n  }\n\n  async onClickSalvar() {\n    const { history } = this.props;\n\n    this.setState(\n      { loading: true },\n      async () => {\n        await updateUser(this.mountStateUser());\n        history.replace('/profile'); // o react usa o histório do navegador com base. O history mantem essas rotas. Usando o replace posso alternar: https://codedcreatures.com/2020/03/17/conditional-redirects-in-react-router/ -- https://www.pluralsight.com/guides/using-react-with-the-history-api\n        this.setState({\n          loading: false,\n        });\n      },\n    );\n  }\n\n  async getUser() {\n    this.setState(\n      { loading: true },\n      async () => {\n        const user = await getUser();\n        this.setState({\n          nameInput: user.name,\n          emailInput: user.email,\n          imgInput: user.image,\n          descInput: user.description,\n          loading: false,\n        });\n      },\n    );\n  }\n\n  validarEmail(email) {\n    const regExp = /\\S+@\\S+\\.\\S+/; // (Apenas para pegar a expressão regular. Elas servem para validar uma string de acordo com uma necessidade específica. Nesse caso, quero validar se a string é um e-mail válido) https://guisalmeida.com/aprendendo-regex-na-pr%C3%A1tica-validando-emails/ & https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n    return regExp.test(email);\n  }\n\n  checkInputs() {\n    const { nameInput, emailInput, imgInput, descInput } = this.state;\n\n    const nameIsValid = nameInput.length > 0 && this.validarEmail(emailInput);\n    const emailIsValid = emailInput.length > 0;\n    const imgIsValid = imgInput.length > 0;\n    const descIsValid = descInput.length > 0;\n\n    return nameIsValid && emailIsValid && imgIsValid && descIsValid;\n  }\n\n  mountStateUser() {\n    const { nameInput, emailInput, imgInput, descInput } = this.state;\n\n    const objUser = {\n      name: nameInput,\n      email: emailInput,\n      image: imgInput,\n      description: descInput,\n    };\n\n    // console.log(objUser);\n\n    return objUser;\n  }\n\n  render() {\n    const { nameInput, emailInput, imgInput, descInput,\n      loading, enabledButton } = this.state;\n\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <Header />\n        {\n          !loading\n            ? (\n              <div className=\"pag-editar-perfil\">\n                <div className=\"conteudo-edit-perfil\">\n                  <h2>Editar perfil</h2>\n                  <form className=\"form-edit-perfil\">\n                    <label htmlFor=\"imgInput\" className=\"label-inputs\">\n                      Imagem: &nbsp;\n                      <input\n                        name=\"imgInput\"\n                        data-testid=\"edit-input-image\"\n                        type=\"text\"\n                        value={ imgInput }\n                        onChange={ this.onInputChange }\n                        // alt=\"image\"\n                      />\n                    </label>\n                    <br />\n                    <label htmlFor=\"nameInput\" className=\"label-inputs\">\n                      Nome: &nbsp;\n                      <input\n                        name=\"nameInput\"\n                        data-testid=\"edit-input-name\"\n                        type=\"text\"\n                        value={ nameInput }\n                        onChange={ this.onInputChange }\n                      />\n                    </label>\n                    <br />\n                    <label htmlFor=\"emailInput\" className=\"label-inputs\">\n                      E-mail: &nbsp;\n                      <input\n                        name=\"emailInput\"\n                        data-testid=\"edit-input-email\"\n                        type=\"email\"\n                        value={ emailInput }\n                        onChange={ this.onInputChange }\n                      />\n                    </label>\n                    <br />\n                    <label htmlFor=\"descInput\" className=\"label-inputs\">\n                      Descrição: &nbsp;\n                      <input\n                        name=\"descInput\"\n                        data-testid=\"edit-input-description\"\n                        type=\"text\"\n                        value={ descInput }\n                        onChange={ this.onInputChange }\n                      />\n                    </label>\n                    <br />\n                    <button\n                      data-testid=\"edit-button-save\"\n                      type=\"button\"\n                      onClick={ this.onClickSalvar }\n                      disabled={ !enabledButton }\n                    >\n                      Salvar\n                    </button>\n                  </form>\n                </div>\n              </div>\n            )\n            : <Loading />\n        }\n      </div>\n    );\n  }\n}\n\nProfileEdit.propTypes = {\n  history: propTypes.string,\n};\n\nProfileEdit.defaultProps = {\n  history: '',\n};\n\nexport default ProfileEdit;\n","import React from 'react';\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">\n        NotFound\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { createUser } from './services/userAPI';\nimport Album from './pages/Album';\nimport Login from './pages/Login';\nimport Search from './pages/Search';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\nimport Loading from './pages/Loading';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onclickEntrar = this.onclickEntrar.bind(this);\n\n    this.state = {\n      nameInput: '',\n      disabledButton: true,\n      loading: false,\n      messageLoginResult: '',\n    };\n  }\n\n  // seta valor do input na variável do estado\n  onInputChange(event) {\n    const nameElement = event.target.name;\n    const valueElement = event.target.value;\n    const limit = 3;\n\n    if (valueElement.length >= limit) {\n      this.setState({\n        [nameElement]: valueElement,\n        disabledButton: false,\n      });\n    } else {\n      this.setState({\n        [nameElement]: valueElement,\n        disabledButton: true,\n      });\n    }\n  }\n\n  // ao clicar no botão entrar da tela de login, faça:\n  async onclickEntrar() {\n    const { nameInput } = this.state;\n\n    this.setState(\n      { loading: true }, // enquanto o set no state não for concluido de fato (assinc..), não ir pra próxima linha...\n      async () => {\n        const requestResult = await createUser({ name: nameInput });\n        this.setState({\n          loading: false,\n          messageLoginResult: requestResult, // trará um 'OK' caso a promise execute com sucesso\n        });\n      },\n    );\n  }\n\n  render() {\n    const { nameInput, disabledButton, loading, messageLoginResult } = this.state;\n\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={ (props) => (<Login\n              { ...props }\n              nameInput={ nameInput }\n              disabledButton={ disabledButton }\n              loading={ loading }\n              messageLoginResult={ messageLoginResult }\n              onInputChange={ this.onInputChange }\n              onclickEntrar={ this.onclickEntrar }\n            />\n            ) }\n          />\n          <Route path=\"/search\" component={ Search } />\n          <Route path=\"/album/:id\" render={ (props) => <Album { ...props } /> } />\n          <Route path=\"/favorites\" component={ Favorites } />\n          <Route exact path=\"/profile/edit\" component={ ProfileEdit } />\n          <Route path=\"/profile\" component={ Profile } />\n          <Route path=\"/loading\" component={ Loading } />\n          <Route path=\"*\" component={ NotFound } />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n// render={ (props) => <Login { ...props } nameInput={ nameInput } disabledButton={ disabledButton } loading={ loading } messageLoginResult={ messageLoginResult } onInputChange={ this.onInputChange } onclickEntrar={ this.onclickEntrar } /> }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}